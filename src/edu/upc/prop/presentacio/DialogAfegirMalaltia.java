package edu.upc.prop.presentacio;

import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

public class DialogAfegirMalaltia extends javax.swing.JDialog {

    private ControladorPresentacioMalalties controladorMalalties;
    private DefaultListModel model;
    private List<String> malaltiesSeleccionats;
    private boolean acceptat;

    public DialogAfegirMalaltia(ControladorPresentacioMalalties controladorMalalties) {
        super();

        this.controladorMalalties = controladorMalalties;
        malaltiesSeleccionats = new ArrayList<String>();
        model = new DefaultListModel();
        acceptat = false;
        setModal(true);

        initComponents();

        jListMalalties.setCellRenderer(new CheckListRenderer());
        jListMalalties.setModel(model);
        omplirModel();

        jListMalalties.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent event) {
                int index = jListMalalties.getSelectedIndex();

                if (index != -1) {
                    CheckListItem item = (CheckListItem) model.getElementAt(index);

                    String labelItem = item.label;
                    if (!item.isSelected) {
                        if (!malaltiesSeleccionats.contains(labelItem)) {
                            malaltiesSeleccionats.add(labelItem);
                        }
                    } else {
                        malaltiesSeleccionats.remove(labelItem);
                    }

                    item.setSelected(!item.isSelected);

                    jListMalalties.repaint(jListMalalties.getCellBounds(index, index));
                }
            }
        });

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListMalalties = new javax.swing.JList();
        jButtonAcceptar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Afegir Malalties");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel1.setText("Malalties:");

        jListMalalties.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jListMalalties.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListMalalties);

        jButtonAcceptar.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jButtonAcceptar.setText("Acceptar");
        jButtonAcceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 274, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAcceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAcceptar)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAcceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptarActionPerformed
        acceptat = true;

        dispose();
    }//GEN-LAST:event_jButtonAcceptarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAcceptar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jListMalalties;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public boolean isAcceptat() {
        return acceptat;
    }

    public List<String> getMalaltiesSeleccionats() {
        return malaltiesSeleccionats;
    }

    private void omplirModel() {
        for (String nomMalaltia : controladorMalalties.getNomMalalties()) {
            model.addElement(new CheckListItem(nomMalaltia));
        }
    }

    private class CheckListItem {

        private String label;
        private boolean isSelected = false;

        public CheckListItem(String label) {
            this.label = label;
        }

        public void setSelected(boolean isSelected) {
            this.isSelected = isSelected;
        }

        @Override
        public String toString() {
            return label;
        }
    }

    private class CheckListRenderer extends JCheckBox implements ListCellRenderer {

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index,
                boolean isSelected, boolean hasFocus) {
            setEnabled(list.isEnabled());
            setSelected(((CheckListItem) value).isSelected);

            setFont(list.getFont());
            setBackground(list.getBackground());
            setForeground(list.getForeground());

            setText(value.toString());

            return this;
        }
    }
}
