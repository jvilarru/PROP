package edu.upc.prop.presentacio;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class DialogAlfabet extends javax.swing.JDialog {

    private DefaultListModel model;
    private ControladorPresentacioSequencies controlador;

    public DialogAlfabet(ControladorPresentacioSequencies controlador) {
        super();

        this.controlador = controlador;
        model = new DefaultListModel();

        setModal(true);
        initComponents();

        jListLletres.setModel(model);
        omplirModel();

        addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                sortir();
            }
        });

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSortir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListLletres = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldCaracter = new javax.swing.JTextField();
        jButtonAfegir = new javax.swing.JButton();
        jButtonBuidar = new javax.swing.JButton();
        jButtonDefecte = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Alfabet");

        jButtonSortir.setText("Sortir");
        jButtonSortir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSortirActionPerformed(evt);
            }
        });

        jListLletres.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListLletres);

        jLabel1.setText("Alfabet actual:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lletra"));

        jTextFieldCaracter.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jTextFieldCaracter.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldCaracter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCaracterFocusGained(evt);
            }
        });
        jTextFieldCaracter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCaracterKeyReleased(evt);
            }
        });

        jButtonAfegir.setText("+");
        jButtonAfegir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAfegirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldCaracter, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButtonAfegir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextFieldCaracter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAfegir))
        );

        jButtonBuidar.setText("Buidar");
        jButtonBuidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuidarActionPerformed(evt);
            }
        });

        jButtonDefecte.setText("Per Defecte");
        jButtonDefecte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefecteActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonBuidar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEliminar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonDefecte))
                            .addComponent(jButtonSortir, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDefecte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSortir)
                            .addComponent(jButtonBuidar)
                            .addComponent(jButtonEliminar))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSortirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSortirActionPerformed
        sortir();
    }//GEN-LAST:event_jButtonSortirActionPerformed

    private void jTextFieldCaracterFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCaracterFocusGained
        jTextFieldCaracter.selectAll();
    }//GEN-LAST:event_jTextFieldCaracterFocusGained

    private void jTextFieldCaracterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCaracterKeyReleased
        String text = jTextFieldCaracter.getText().toUpperCase();

        if (isLetter(text)) {
            jTextFieldCaracter.setForeground(Color.BLACK);
            jTextFieldCaracter.setText(text);
        } else {
            jTextFieldCaracter.setForeground(Color.RED);
        }
    }//GEN-LAST:event_jTextFieldCaracterKeyReleased

    private void jButtonDefecteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefecteActionPerformed
        clearAll();

        controlador.setDefaultAlfabet();
        omplirModel();
    }//GEN-LAST:event_jButtonDefecteActionPerformed

    private void jButtonBuidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuidarActionPerformed
        clearAll();
    }//GEN-LAST:event_jButtonBuidarActionPerformed

    private void jButtonAfegirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAfegirActionPerformed
        String s = jTextFieldCaracter.getText().toUpperCase();
        String msg = "";

        if (s == null || s.equals("")) {
            msg = "S'ha de ficar una lletra vàlida";
        } else if (s.length() > 1) {
            msg = "Només pot escriure una única lletra";
        } else if (controlador.conteCaracterAlfabet(s.charAt(0))) {
            msg = "La lletra introduida ja existeix a l'alfabet";
        } else if (!isLetter(s)) {
            msg = "Ha de ser una lletra vàlida [A-Z]";
        }

        jTextFieldCaracter.requestFocusInWindow();

        if (!msg.equals("")) {
            JOptionPane.showMessageDialog(this, msg, "Error", JOptionPane.ERROR_MESSAGE);

            return;
        }

        model.addElement(s.charAt(0));
        controlador.addCaracterAlfabet(s.charAt(0));
    }//GEN-LAST:event_jButtonAfegirActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        for (Object value : jListLletres.getSelectedValues()) {
            char c = (Character) value;

            boolean b = controlador.removeCaracterAlfabet(c);
            if (b) {
                model.removeElement(c);
            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAfegir;
    private javax.swing.JButton jButtonBuidar;
    private javax.swing.JButton jButtonDefecte;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonSortir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jListLletres;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCaracter;
    // End of variables declaration//GEN-END:variables

    private void omplirModel() {
        for (char c : controlador.getLlistaCaractersAlfabet()) {
            model.addElement(c);
        }
    }

    private boolean isLetter(String s) {
        return s.length() == 1 && s.charAt(0) >= 'A' && s.charAt(0) <= 'Z';
    }

    private void clearAll() {
        model.removeAllElements();
        controlador.buidarAlfabet();
    }

    private void sortir() {
        if (controlador.getTamanyAlfabet() == 0) {
            JOptionPane.showMessageDialog(this, "Ha de introduïr almenys una lletra a l'alfabet", "Alfabet buit", JOptionPane.ERROR_MESSAGE);
            return;
        }

        dispose();
    }
}
