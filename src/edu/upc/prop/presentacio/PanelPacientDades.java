package edu.upc.prop.presentacio;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class PanelPacientDades extends javax.swing.JPanel {

    private ControladorPresentacioPacients controladorPacients;
    private ControladorPresentacioSimptomes controlaSimptomes;
    private ControladorPresentacioMalalties controlaMalalties;
    private DefaultListModel modelSimptomes;
    private DefaultListModel modelMalalties;
    private List<String> simptomesEliminats;
    private List<String> malaltiesEliminades;
    private List<String> simptomesAfegits;
    private List<String> malaltiesAfegides;
    private boolean isNew;
    private DialogAfegirSimptoma dialogAfegirSimptoma;
    private DialogAfegirMalaltia dialogAfegirMalaltia;
    private static final Font errorFont = new Font(Font.DIALOG, Font.PLAIN, 11);
    private static final Font exampleFont = new Font(Font.DIALOG, Font.ITALIC, 11);
    private static final String NIF_ASSOCIATION = "TRWAGMYFPDXBNJZSQVHLCKE";

    /**
     * Creates new form PanelPacientDades
     */
    public PanelPacientDades(ControladorPresentacioPacients controladorPacients, ControladorPresentacioSimptomes controlaSimptomes,
            ControladorPresentacioMalalties controladormalalties, boolean isNew) {
        this.controladorPacients = controladorPacients;
        this.controlaSimptomes = controlaSimptomes;
        this.controlaMalalties = controladormalalties;
        this.isNew = isNew;
        modelSimptomes = new DefaultListModel();
        modelMalalties = new DefaultListModel();
        simptomesEliminats = new ArrayList<String>();
        malaltiesEliminades = new ArrayList<String>();
        simptomesAfegits = new ArrayList<String>();
        malaltiesAfegides = new ArrayList<String>();

        initComponents();

        jListSimptomes.setModel(modelSimptomes);
        jListMalalties.setModel(modelMalalties);

        jTextFieldDNI.setEditable(isNew);
        jTextFieldDataNaix.setEditable(isNew);
        jRadioButtonFemeni.setEnabled(isNew);
        jRadioButtonMasculi.setEnabled(isNew);
        if (!isNew) {
            jTextFieldDNI.setBackground(new Color(239, 242, 249));
            jTextFieldDataNaix.setBackground(new Color(239, 242, 249));
        }
    }

    public PanelPacientDades(ControladorPresentacioPacients controladorPacients, ControladorPresentacioSimptomes controlaSimptomes,
            ControladorPresentacioMalalties controladormalalties, String dni, boolean isNew) {
        this(controladorPacients, controlaSimptomes, controladormalalties, isNew);

        omplirCamps(dni);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldNom = new javax.swing.JTextField();
        jTextFieldCognoms = new javax.swing.JTextField();
        jTextFieldDataNaix = new javax.swing.JTextField();
        jTextFieldDNI = new javax.swing.JTextField();
        jRadioButtonMasculi = new javax.swing.JRadioButton();
        jRadioButtonFemeni = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSimptomes = new javax.swing.JList();
        jButtonMesSimptomes = new javax.swing.JButton();
        jButtonMenysSimptomes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListMalalties = new javax.swing.JList();
        jButtonMesMalalties = new javax.swing.JButton();
        jButtonMenysMalalties = new javax.swing.JButton();
        jButtonAcceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabelDataFormat = new javax.swing.JLabel();
        jLabelAdnFormat = new javax.swing.JLabel();
        jLabelSexeFormat = new javax.swing.JLabel();
        jLabelDniFormat = new javax.swing.JLabel();
        jTextFieldADN = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel1.setText("Nom:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel2.setText("Cognoms:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel3.setText("NIF:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel4.setText("Sexe:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel5.setText("Data Naixement:");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel6.setText("ADN:");

        jTextFieldNom.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jTextFieldNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNomKeyTyped(evt);
            }
        });

        jTextFieldCognoms.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jTextFieldCognoms.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCognomsKeyTyped(evt);
            }
        });

        jTextFieldDataNaix.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jTextFieldDataNaix.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldDataNaixFocusGained(evt);
            }
        });
        jTextFieldDataNaix.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDataNaixKeyTyped(evt);
            }
        });

        jTextFieldDNI.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextFieldDNI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldDNIFocusGained(evt);
            }
        });
        jTextFieldDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDNIKeyTyped(evt);
            }
        });

        buttonGroup1.add(jRadioButtonMasculi);
        jRadioButtonMasculi.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jRadioButtonMasculi.setText("Masculí");
        jRadioButtonMasculi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMasculiActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonFemeni);
        jRadioButtonFemeni.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jRadioButtonFemeni.setText("Femení");
        jRadioButtonFemeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFemeniActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Símptomes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(180, 282));

        jListSimptomes.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jScrollPane1.setViewportView(jListSimptomes);

        jButtonMesSimptomes.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMesSimptomes.setText("+");
        jButtonMesSimptomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMesSimptomesActionPerformed(evt);
            }
        });

        jButtonMenysSimptomes.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMenysSimptomes.setText("-");
        jButtonMenysSimptomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenysSimptomesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonMenysSimptomes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMesSimptomes))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMesSimptomes)
                    .addComponent(jButtonMenysSimptomes))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Malalties", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(180, 282));

        jListMalalties.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jScrollPane2.setViewportView(jListMalalties);

        jButtonMesMalalties.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMesMalalties.setText("+");
        jButtonMesMalalties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMesMalaltiesActionPerformed(evt);
            }
        });

        jButtonMenysMalalties.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMenysMalalties.setText("-");
        jButtonMenysMalalties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenysMalaltiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonMenysMalalties)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMesMalalties)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMesMalalties)
                    .addComponent(jButtonMenysMalalties))
                .addContainerGap())
        );

        jButtonAcceptar.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jButtonAcceptar.setText("Acceptar");
        jButtonAcceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabelDataFormat.setFont(new java.awt.Font("Dialog", 2, 11)); // NOI18N
        jLabelDataFormat.setForeground(new java.awt.Color(128, 128, 128));
        jLabelDataFormat.setText("(p.ex: 01/01/2001)");

        jLabelAdnFormat.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabelAdnFormat.setForeground(new java.awt.Color(255, 0, 0));

        jLabelSexeFormat.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabelSexeFormat.setForeground(new java.awt.Color(255, 0, 0));

        jLabelDniFormat.setFont(new java.awt.Font("Dialog", 2, 11)); // NOI18N
        jLabelDniFormat.setForeground(new java.awt.Color(128, 128, 128));
        jLabelDniFormat.setText("(p.ex: 01234567A)");

        jTextFieldADN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldADNKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldADNKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAcceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                    .addComponent(jTextFieldCognoms)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButtonMasculi)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jRadioButtonFemeni)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelSexeFormat)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldDNI, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(jTextFieldDataNaix)))
                            .addComponent(jTextFieldADN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAdnFormat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDataFormat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDniFormat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDniFormat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCognoms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldDataNaix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDataFormat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jRadioButtonMasculi)
                    .addComponent(jRadioButtonFemeni)
                    .addComponent(jLabelSexeFormat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(jLabelAdnFormat)
                    .addComponent(jTextFieldADN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAcceptar)
                    .addComponent(jButtonCancelar))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextFieldCognoms, jTextFieldDataNaix});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextFieldDNI, jTextFieldNom});

    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAcceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptarActionPerformed
        if (!validarCamps()) {
            return;
        }

        String dni = jTextFieldDNI.getText().trim();
        dni = dni.substring(0, dni.length() - 1);
        String dataNaix = jTextFieldDataNaix.getText().trim();
        String adn = jTextFieldADN.getText();
        char sexe = jRadioButtonMasculi.isSelected() ? 'M' : 'F';

        String msg;
        String title;
        int opcio = JOptionPane.ERROR_MESSAGE;
        List<String> malalties = new ArrayList<String>();
        List<String> simptomes = new ArrayList<String>();

        for (int i = 0; i < modelSimptomes.size(); i++) {
            simptomes.add((String) modelSimptomes.get(i));
        }

        for (int i = 0; i < modelMalalties.size(); i++) {
            malalties.add((String) modelMalalties.get(i));
        }

        boolean ok;
        if (isNew) {
            ok = controladorPacients.addPacient(dni, jTextFieldNom.getText(),
                    jTextFieldCognoms.getText(), dataNaix, sexe, adn, malalties, simptomes);
            title = "Nou pacient";
            msg = "No s'ha pogut insertar. Pot ser que ja existeixi o que la seqüència d'ADN no sigui vàlida";
        } else {
            ok = controladorPacients.modificaPacient(dni, jTextFieldNom.getText(), jTextFieldCognoms.getText(),
                    adn, simptomesAfegits, simptomesEliminats, malaltiesAfegides, malaltiesEliminades);
            title = "Modificar pacient";
            msg = "No s'ha pogut modificar. Pot ser que  existeixi o que la seqüència d'ADN no sigui vàlida";
        }
        if (ok) {
            controladorPacients.redibuixarVista(dni, !isNew);
            controladorPacients.seleccionaPacients(dni);
        } else {
            JOptionPane.showMessageDialog(this, msg, title, opcio);
        }

    }//GEN-LAST:event_jButtonAcceptarActionPerformed

    private void jButtonMesSimptomesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMesSimptomesActionPerformed
        dialogAfegirSimptoma = new DialogAfegirSimptoma(controlaSimptomes);
        dialogAfegirSimptoma.setVisible(true);

        if (dialogAfegirSimptoma.isAcceptat()) {
            for (String simptoma : dialogAfegirSimptoma.getSimtomesSeleccionats()) {
                if (!modelSimptomes.contains(simptoma)) {
                    modelSimptomes.addElement(simptoma);
                    if (!isNew && !simptomesAfegits.contains(simptoma)) {
                        simptomesAfegits.add(simptoma);
                    }
                }
            }
        }
        controladorPacients.setModificant();
    }//GEN-LAST:event_jButtonMesSimptomesActionPerformed

    private void jButtonMenysSimptomesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenysSimptomesActionPerformed
        int index = jListSimptomes.getSelectedIndex();

        if (index != -1) {
            String simptoma = (String) modelSimptomes.get(index);
            if (!simptomesEliminats.contains(simptoma)) {
                simptomesEliminats.add(simptoma);
            }
            modelSimptomes.remove(index);
        }
        controladorPacients.setModificant();
    }//GEN-LAST:event_jButtonMenysSimptomesActionPerformed

    private void jButtonMesMalaltiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMesMalaltiesActionPerformed
        dialogAfegirMalaltia = new DialogAfegirMalaltia(controlaMalalties);
        dialogAfegirMalaltia.setVisible(true);

        if (dialogAfegirMalaltia.isAcceptat()) {
            for (String malaltia : dialogAfegirMalaltia.getMalaltiesSeleccionats()) {
                if (!modelMalalties.contains(malaltia)) {
                    modelMalalties.addElement(malaltia);
                    if (!isNew && !malaltiesAfegides.contains(malaltia)) {
                        malaltiesAfegides.add(malaltia);
                    }
                }
            }
        }
        controladorPacients.setModificant();
    }//GEN-LAST:event_jButtonMesMalaltiesActionPerformed

    private void jButtonMenysMalaltiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenysMalaltiesActionPerformed
        int index = jListMalalties.getSelectedIndex();

        if (index != -1) {
            String malaltia = (String) modelMalalties.get(index);
            if (!malaltiesEliminades.contains(malaltia)) {
                malaltiesEliminades.add(malaltia);
            }
            modelMalalties.remove(index);
        }
        controladorPacients.setModificant();
    }//GEN-LAST:event_jButtonMenysMalaltiesActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        controladorPacients.cancelar();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTextFieldDNIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDNIFocusGained
        jLabelDniFormat.setText("(p.ex: 01234567A)");
        jLabelDniFormat.setForeground(Color.gray);
        jLabelDniFormat.setFont(exampleFont);
    }//GEN-LAST:event_jTextFieldDNIFocusGained

    private void jTextFieldDataNaixFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDataNaixFocusGained
        jLabelDataFormat.setText("(p.ex: 01/01/2001)");
        jLabelDataFormat.setForeground(Color.gray);
        jLabelDataFormat.setFont(exampleFont);
    }//GEN-LAST:event_jTextFieldDataNaixFocusGained

    private void jRadioButtonMasculiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMasculiActionPerformed
        jLabelSexeFormat.setText("");
        controladorPacients.setModificant();
    }//GEN-LAST:event_jRadioButtonMasculiActionPerformed

    private void jRadioButtonFemeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFemeniActionPerformed
        jLabelSexeFormat.setText("");
        controladorPacients.setModificant();
    }//GEN-LAST:event_jRadioButtonFemeniActionPerformed

    private void jTextFieldNomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomKeyTyped
        controladorPacients.setModificant();
    }//GEN-LAST:event_jTextFieldNomKeyTyped

    private void jTextFieldCognomsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCognomsKeyTyped
        controladorPacients.setModificant();
    }//GEN-LAST:event_jTextFieldCognomsKeyTyped

    private void jTextFieldDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDNIKeyTyped
        controladorPacients.setModificant();
    }//GEN-LAST:event_jTextFieldDNIKeyTyped

    private void jTextFieldDataNaixKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDataNaixKeyTyped
        controladorPacients.setModificant();
    }//GEN-LAST:event_jTextFieldDataNaixKeyTyped

    private void jTextFieldADNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldADNKeyTyped
        controladorPacients.setModificant();
    }//GEN-LAST:event_jTextFieldADNKeyTyped

    private void jTextFieldADNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldADNKeyReleased
        String text = jTextFieldADN.getText();

        jTextFieldADN.setText(text.toUpperCase());
    }//GEN-LAST:event_jTextFieldADNKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAcceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonMenysMalalties;
    private javax.swing.JButton jButtonMenysSimptomes;
    private javax.swing.JButton jButtonMesMalalties;
    private javax.swing.JButton jButtonMesSimptomes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelAdnFormat;
    private javax.swing.JLabel jLabelDataFormat;
    private javax.swing.JLabel jLabelDniFormat;
    private javax.swing.JLabel jLabelSexeFormat;
    private javax.swing.JList jListMalalties;
    private javax.swing.JList jListSimptomes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonFemeni;
    private javax.swing.JRadioButton jRadioButtonMasculi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldADN;
    private javax.swing.JTextField jTextFieldCognoms;
    private javax.swing.JTextField jTextFieldDNI;
    private javax.swing.JTextField jTextFieldDataNaix;
    private javax.swing.JTextField jTextFieldNom;
    // End of variables declaration//GEN-END:variables

    private void omplirCamps(String dni) {

        String nif;
        int num;
        if (dni.startsWith("X")) {
            num = (int) (Long.valueOf(dni.substring(1)) % 23);
        } else if (dni.startsWith("Y")) {
            num = (int) (Long.valueOf(dni.substring(1)) % 23) + 1;
        } else if (dni.startsWith("Z")) {
            num = (int) (Long.valueOf(dni.substring(1)) % 23) + 2;
        } else {
            num = (int) (Long.valueOf(dni) % 23);
        }
        nif = dni + NIF_ASSOCIATION.charAt(num);
        jTextFieldDNI.setText(nif);
        jTextFieldNom.setText(controladorPacients.getNom(dni));
        jTextFieldCognoms.setText(controladorPacients.getCognom(dni));
        jTextFieldADN.setText(controladorPacients.getAdn(dni));
        jTextFieldDataNaix.setText(controladorPacients.getDataNaixement(dni));

        boolean masculi = controladorPacients.getSexe(dni) == 'M';
        jRadioButtonMasculi.setSelected(masculi);
        jRadioButtonFemeni.setSelected(!masculi);

        for (String mal : controladorPacients.getMalalties(dni)) {
            modelMalalties.addElement(mal);
        }

        for (String simp : controladorPacients.getSimptomes(dni)) {
            modelSimptomes.addElement(simp);
        }

    }

    private boolean dniValid(String nif) {
        int dni;
        try {
        if (nif.charAt(0) == 'X') {
            dni = Integer.parseInt(nif.substring(1, 8));
        } else if (nif.charAt(0) == 'Y') {
            dni = Integer.parseInt(nif.substring(1, 8)) + 1;
        } else if (nif.charAt(0) == 'Z') {
            dni = Integer.parseInt(nif.substring(1, 8)) + 2;
        } else {
            dni = Integer.parseInt(nif.substring(0, 8));
        }
        return nif.charAt(8) == NIF_ASSOCIATION.charAt(dni % 23);
        }
        catch (Exception e) {
            return false;
        }
    }

    private boolean dataNaixFormatOk(String dataNaix) {
        if (dataNaix.length() != 10) {
            return false;
        }
        if (dataNaix.charAt(2) != '/' || dataNaix.charAt(5) != '/') {
            return false;
        }
        return true;
    }

    private boolean dataNaixValida(String dataNaix) {
        try {
            int dia = Integer.parseInt(dataNaix.substring(0, 2));
            int mes = Integer.parseInt(dataNaix.substring(3, 5));
            int any = Integer.parseInt(dataNaix.substring(6, 10));
            Calendar c = Calendar.getInstance();
            if (any < 0 || any > c.get(Calendar.YEAR)) {
                return false;
            }
            if (mes < 1 || mes > 12) {
                return false;
            }
            if (dia < 1) {
                return false;
            }
            if (mes == 2 && dia > 28) {
                return false;
            }
            if (mes % 2 == 1 && mes < 8) {
                if (dia > 31) {
                    return false;
                } else if (dia > 30) {
                    return false;
                }
            }
            Calendar c2 = Calendar.getInstance();
            c2.set(any, mes-1, dia);
            if (c2.getTimeInMillis() > c.getTimeInMillis()) {
                return false;
            }
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    private boolean validarCamps() {
        String nif = jTextFieldDNI.getText().trim();
        String dataNaix = jTextFieldDataNaix.getText().trim();
        String adn = jTextFieldADN.getText();

        boolean valid = true;

        if (isNew && nif.equals("")) {
            jLabelDniFormat.setText("Cal introduir un NIF");
            jLabelDniFormat.setFont(errorFont);
            jLabelDniFormat.setForeground(Color.red);
            valid = valid && false;
        } else if (isNew && nif.length() != 9) {
            jLabelDniFormat.setText("Format incorrecte");
            jLabelDniFormat.setFont(errorFont);
            jLabelDniFormat.setForeground(Color.red);
            valid = valid && false;
        } else if (isNew && !dniValid(nif)) {
            jLabelDniFormat.setText("Lletra incorrecta");
            jLabelDniFormat.setFont(errorFont);
            jLabelDniFormat.setForeground(Color.red);
            valid = valid && false;
        }

        if (isNew && dataNaix.equals("")) {
            jLabelDataFormat.setText("Cal introduir una data");
            jLabelDataFormat.setFont(errorFont);
            jLabelDataFormat.setForeground(Color.red);
            valid = valid && false;
        } else if (isNew && !dataNaixFormatOk(dataNaix)) {
            jLabelDataFormat.setText("Format incorrecte");
            jLabelDataFormat.setFont(errorFont);
            jLabelDataFormat.setForeground(Color.red);
            valid = valid && false;
        } else if (isNew && !dataNaixValida(dataNaix)) {
            jLabelDataFormat.setText("Data invàlida");
            jLabelDataFormat.setFont(errorFont);
            jLabelDataFormat.setForeground(Color.red);
            valid = valid && false;
        }

        if (adn == null || adn.equals("")) {
            jLabelAdnFormat.setText("Cal introduir un ADN");
            jLabelAdnFormat.setFont(errorFont);
            valid = valid && false;
        }

        if (!jRadioButtonMasculi.isSelected() && !jRadioButtonFemeni.isSelected()) {
            jLabelSexeFormat.setText("Cal indicar el Sexe");
            valid = valid && false;
        }
        return valid;

    }
}
