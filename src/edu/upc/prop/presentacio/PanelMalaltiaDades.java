package edu.upc.prop.presentacio;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class PanelMalaltiaDades extends javax.swing.JPanel {

    private ControladorPresentacioMalalties controladorMalalties;
    private ControladorPresentacioSequencies controladorSequencies;
    private ControladorPresentacioSimptomes controladorSimptomes;
    private ControladorPresentacioPacients controladoPacients;
    private DefaultListModel modelSimptomes;
    private DefaultListModel modelSequencies;
    private DefaultListModel modelPacients;
    private List<String> simptomesEliminats;
    private List<String> sequenciesEliminades;
    private List<String> pacientsEliminats;
    private List<String> pacientsAfegits;
    private List<String> simptomesAfegits;
    private List<String> sequenciesAfegides;
    private boolean isNew;
    private DialogAfegirSimptoma dialogAfegirSimptoma;
    private DialogAfegirSequencia dialogAfegirSequencia;
    private DialogAfegirPacient dialogAfegirPacient;

    public PanelMalaltiaDades(ControladorPresentacioMalalties controladorMalalties, ControladorPresentacioSequencies controladorSequencies,
            ControladorPresentacioSimptomes controladorSimptomes, ControladorPresentacioPacients controladorPacients, boolean isNew) {
        this.controladorMalalties = controladorMalalties;
        this.controladoPacients = controladorPacients;
        this.controladorSequencies = controladorSequencies;
        this.controladorSimptomes = controladorSimptomes;
        this.isNew = isNew;

        modelSimptomes = new DefaultListModel();
        modelSequencies = new DefaultListModel();
        modelPacients = new DefaultListModel();

        simptomesEliminats = new ArrayList<String>();
        sequenciesEliminades = new ArrayList<String>();
        pacientsEliminats = new ArrayList<String>();
        pacientsAfegits = new ArrayList<String>();
        simptomesAfegits = new ArrayList<String>();
        sequenciesAfegides = new ArrayList<String>();

        initComponents();

        jListSimptomes.setModel(modelSimptomes);
        jListSequencies.setModel(modelSequencies);
        jListPacients.setModel(modelPacients);

        if (!isNew) {
            jTextFieldNom.setEditable(false);
            jTextFieldNom.setBackground(new Color(239, 242, 249));
        }

    }

    public PanelMalaltiaDades(ControladorPresentacioMalalties controladorMalalties, ControladorPresentacioSequencies controladorSequencies,
            ControladorPresentacioSimptomes controladorSimptomes, ControladorPresentacioPacients controladorPacients, String malaltia, boolean isNew) {
        this(controladorMalalties, controladorSequencies, controladorSimptomes, controladorPacients, isNew);

        omplirCamps(malaltia);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldNom = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextDescripcio = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSimptomes = new javax.swing.JList();
        jButtonMesSimptomes = new javax.swing.JButton();
        jButtonMenysSimptomes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListSequencies = new javax.swing.JList();
        jButtonMesSequencies = new javax.swing.JButton();
        jButtonMenysSequencies = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListPacients = new javax.swing.JList();
        jButtonMenysPacients = new javax.swing.JButton();
        jButtonMesPacients = new javax.swing.JButton();
        jButtonAcceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabelFormat = new javax.swing.JLabel();

        jTextFieldNom.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jTextFieldNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNomFocusGained(evt);
            }
        });
        jTextFieldNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNomKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel1.setText("Nom:");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel7.setText("Descripció:");

        jTextDescripcio.setColumns(20);
        jTextDescripcio.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jTextDescripcio.setLineWrap(true);
        jTextDescripcio.setRows(5);
        jTextDescripcio.setWrapStyleWord(true);
        jTextDescripcio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextDescripcioKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(jTextDescripcio);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Símptomes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jListSimptomes.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jScrollPane1.setViewportView(jListSimptomes);

        jButtonMesSimptomes.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMesSimptomes.setText("+");
        jButtonMesSimptomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMesSimptomesActionPerformed(evt);
            }
        });

        jButtonMenysSimptomes.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMenysSimptomes.setText("-");
        jButtonMenysSimptomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenysSimptomesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonMenysSimptomes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMesSimptomes))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMesSimptomes)
                    .addComponent(jButtonMenysSimptomes))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seqüències", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jListSequencies.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jScrollPane2.setViewportView(jListSequencies);

        jButtonMesSequencies.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMesSequencies.setText("+");
        jButtonMesSequencies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMesSequenciesActionPerformed(evt);
            }
        });

        jButtonMenysSequencies.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMenysSequencies.setText("-");
        jButtonMenysSequencies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenysSequenciesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonMenysSequencies)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMesSequencies)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMesSequencies)
                    .addComponent(jButtonMenysSequencies))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pacients", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jListPacients.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jScrollPane4.setViewportView(jListPacients);

        jButtonMenysPacients.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMenysPacients.setText("-");
        jButtonMenysPacients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenysPacientsActionPerformed(evt);
            }
        });

        jButtonMesPacients.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMesPacients.setText("+");
        jButtonMesPacients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMesPacientsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonMenysPacients)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMesPacients)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMenysPacients)
                    .addComponent(jButtonMesPacients))
                .addContainerGap())
        );

        jButtonAcceptar.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jButtonAcceptar.setText("Acceptar");
        jButtonAcceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabelFormat.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jLabelFormat.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAcceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelFormat, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                        .addGap(282, 282, 282)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFormat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAcceptar)
                    .addComponent(jButtonCancelar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMesSimptomesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMesSimptomesActionPerformed
        dialogAfegirSimptoma = new DialogAfegirSimptoma(controladorSimptomes);
        dialogAfegirSimptoma.setVisible(true);

        if (dialogAfegirSimptoma.isAcceptat()) {
            for (String simptoma : dialogAfegirSimptoma.getSimtomesSeleccionats()) {
                if (!modelSimptomes.contains(simptoma)) {
                    modelSimptomes.addElement(simptoma);
                    if (!isNew && !simptomesAfegits.contains(simptoma)) {
                        simptomesAfegits.add(simptoma);
                    }
                }
            }
        }
        controladorMalalties.setModificant();
    }//GEN-LAST:event_jButtonMesSimptomesActionPerformed

    private void jButtonMenysSimptomesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenysSimptomesActionPerformed
        int index = jListSimptomes.getSelectedIndex();

        if (index != -1) {
            String simptoma = (String) modelSimptomes.get(index);
            if (!simptomesEliminats.contains(simptoma)) {
                simptomesEliminats.add(simptoma);
            }
            modelSimptomes.remove(index);
        }
        controladorMalalties.setModificant();
    }//GEN-LAST:event_jButtonMenysSimptomesActionPerformed

    private void jButtonMesSequenciesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMesSequenciesActionPerformed
        dialogAfegirSequencia = new DialogAfegirSequencia(controladorSequencies);
        dialogAfegirSequencia.setVisible(true);

        if (dialogAfegirSequencia.isAcceptat()) {
            for (String sequencia : dialogAfegirSequencia.getSequenciesSeleccionats()) {
                if (!modelSequencies.contains(sequencia)) {
                    modelSequencies.addElement(sequencia);
                    if (!isNew && !sequenciesAfegides.contains(sequencia)) {
                        sequenciesAfegides.add(sequencia);
                    }
                }

            }
        }
        controladorMalalties.setModificant();
    }//GEN-LAST:event_jButtonMesSequenciesActionPerformed

    private void jButtonMenysSequenciesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenysSequenciesActionPerformed
        int index = jListSequencies.getSelectedIndex();

        if (index != -1) {
            String sequencia = (String) modelSequencies.get(index);
            if (!sequenciesEliminades.contains(sequencia)) {
                sequenciesEliminades.add(sequencia);
            }
            modelSequencies.remove(index);
        }
        controladorMalalties.setModificant();
    }//GEN-LAST:event_jButtonMenysSequenciesActionPerformed

    private void jButtonMesPacientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMesPacientsActionPerformed
        dialogAfegirPacient = new DialogAfegirPacient(controladoPacients);

        dialogAfegirPacient.setVisible(true);

        if (dialogAfegirPacient.isAcceptat()) {
            for (String pacient : dialogAfegirPacient.getPacientsSeleccionats()) {
                modelPacients.addElement(pacient.substring(0, pacient.indexOf(":")).trim());
                pacientsAfegits.add(pacient);
            }
        }
        controladorMalalties.setModificant();
    }//GEN-LAST:event_jButtonMesPacientsActionPerformed

    private void jButtonMenysPacientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenysPacientsActionPerformed
        int index = jListPacients.getSelectedIndex();

        if (index != -1) {
            String pac = (String) modelPacients.get(index);
            pacientsEliminats.add(pac.substring(0, pac.indexOf(":")).trim());
            modelPacients.remove(index);
        }
        controladorMalalties.setModificant();
    }//GEN-LAST:event_jButtonMenysPacientsActionPerformed

    private void jButtonAcceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptarActionPerformed
        String nom = jTextFieldNom.getText();

        if (nom.equals("")) {
            jLabelFormat.setText("Cal introduir un nom");
            return;
        }

        String msg;
        String title;
        int opcio = JOptionPane.ERROR_MESSAGE;


        boolean ok;
        if (isNew) {
            List<String> simptomes = new ArrayList<String>();
            List<String> sequencies = new ArrayList<String>();
            List<String> pacients = new ArrayList<String>();

            for (int i = 0; i < modelSimptomes.size(); i++) {
                simptomes.add((String) modelSimptomes.get(i));
            }

            for (int i = 0; i < modelSequencies.size(); i++) {
                sequencies.add(modelSequencies.get(i).toString().substring(modelSequencies.get(i).toString().indexOf(":") + 1).trim());
            }

            String dni;
            for (int i = 0; i < modelPacients.size(); i++) {
                dni = (String) modelPacients.get(i);
                pacients.add(dni);
            }
            ok = controladorMalalties.addMalaltia(nom, jTextDescripcio.getText(), pacients,
                    simptomes, sequencies);
            msg = "No s'ha pogut insertar. Pot ser que ja existeixi";
            title = "Nova malaltia";
        } else {
            ok = controladorMalalties.modificaMalaltia(nom, jTextDescripcio.getText(),
                    pacientsEliminats, pacientsAfegits, simptomesAfegits, simptomesEliminats, sequenciesAfegides, sequenciesEliminades);
            msg = "No s'ha pogut modificar. Pot ser que no existeixi";
            title = "Modificar malaltia";
        }
        if (ok) {
            if (isNew) controladorMalalties.redibuixarVista(nom);
            controladorMalalties.seleccionaMalaltia(nom);
        } else {
            JOptionPane.showMessageDialog(this, msg, title, opcio);
        }

    }//GEN-LAST:event_jButtonAcceptarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        controladorMalalties.cancelar();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTextFieldNomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNomFocusGained
        jLabelFormat.setText("");
    }//GEN-LAST:event_jTextFieldNomFocusGained

    private void jTextFieldNomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomKeyTyped
        controladorMalalties.setModificant();
    }//GEN-LAST:event_jTextFieldNomKeyTyped

    private void jTextDescripcioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextDescripcioKeyTyped
        controladorMalalties.setModificant();
    }//GEN-LAST:event_jTextDescripcioKeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAcceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonMenysPacients;
    private javax.swing.JButton jButtonMenysSequencies;
    private javax.swing.JButton jButtonMenysSimptomes;
    private javax.swing.JButton jButtonMesPacients;
    private javax.swing.JButton jButtonMesSequencies;
    private javax.swing.JButton jButtonMesSimptomes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelFormat;
    private javax.swing.JList jListPacients;
    private javax.swing.JList jListSequencies;
    private javax.swing.JList jListSimptomes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextDescripcio;
    private javax.swing.JTextField jTextFieldNom;
    // End of variables declaration//GEN-END:variables

    private void omplirCamps(String malaltia) {
        jTextFieldNom.setText(malaltia);
        jTextDescripcio.setText(controladorMalalties.getDescripcio(malaltia));

        for (String simptoma : controladorMalalties.getSimptomes(malaltia)) {
            modelSimptomes.addElement(simptoma);
        }

        for (String sequencia : controladorMalalties.getSequencies(malaltia)) {
            modelSequencies.addElement(sequencia);
        }
        for (String pacient : controladorMalalties.getPacients(malaltia)) {
            modelPacients.addElement(pacient);
        }
    }
}
