package edu.upc.prop.presentacio;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class PanelSimptomaDades extends javax.swing.JPanel {

    private ControladorPresentacioSimptomes controladorSimptomes;
    private ControladorPresentacioMalalties controladorMalalties;
    private ControladorPresentacioPacients controladorPacients;
    private DefaultListModel modelMalalties;
    private DefaultListModel modelPacients;
    private List<String> malaltiesEliminades;
    private List<String> pacientsEliminats;
    private List<String> malaltiesAfegides;
    private List<String> pacientsAfegits;
    private boolean isNew;
    private DialogAfegirMalaltia dialogAfegirMalaltia;
    private DialogAfegirPacient dialogAfegirPacient;

    /**
     * Creates new form PanelSimptomaDades
     */
    public PanelSimptomaDades(ControladorPresentacioSimptomes controladorSimptomes, ControladorPresentacioMalalties controladorMalalties,
            ControladorPresentacioPacients controladorPacients) {
        this.controladorSimptomes = controladorSimptomes;
        this.controladorMalalties = controladorMalalties;
        this.controladorPacients = controladorPacients;
        this.isNew = true;

        modelMalalties = new DefaultListModel();
        modelPacients = new DefaultListModel();
        malaltiesEliminades = new ArrayList<String>();
        pacientsEliminats = new ArrayList<String>();
        malaltiesAfegides = new ArrayList<String>();
        pacientsAfegits = new ArrayList<String>();

        initComponents();
        jListMalalties.setModel(modelMalalties);
        jListPacients.setModel(modelPacients);

    }

    public PanelSimptomaDades(ControladorPresentacioSimptomes controladorSimptomes, ControladorPresentacioMalalties controladorMalalties,
            ControladorPresentacioPacients controladorPacients, String simptoma) {
        this.controladorSimptomes = controladorSimptomes;
        this.controladorMalalties = controladorMalalties;
        this.controladorPacients = controladorPacients;
        this.isNew = false;

        modelMalalties = new DefaultListModel();
        modelPacients = new DefaultListModel();
        malaltiesEliminades = new ArrayList<String>();
        pacientsEliminats = new ArrayList<String>();
        malaltiesAfegides = new ArrayList<String>();
        pacientsAfegits = new ArrayList<String>();

        initComponents();
        jListMalalties.setModel(modelMalalties);
        jListPacients.setModel(modelPacients);

        jTextFieldNom.setEditable(false);
        jTextFieldNom.setBackground(new Color(239, 242, 249));
        omplirCamps(simptoma);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNom = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListMalalties = new javax.swing.JList();
        jButtonMesMalalties = new javax.swing.JButton();
        jButtonMenysMalalties = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPanePacients = new javax.swing.JScrollPane();
        jListPacients = new javax.swing.JList();
        jButtonMenysPacients = new javax.swing.JButton();
        jButtonMesPacients = new javax.swing.JButton();
        jButtonAcceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabelFormat = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel1.setText("Nom:");

        jTextFieldNom.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jTextFieldNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNomFocusGained(evt);
            }
        });
        jTextFieldNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNomKeyTyped(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Malalties", 0, 0, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(153, 326));

        jListMalalties.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jScrollPane1.setViewportView(jListMalalties);

        jButtonMesMalalties.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMesMalalties.setText("+");
        jButtonMesMalalties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMesMalaltiesActionPerformed(evt);
            }
        });

        jButtonMenysMalalties.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMenysMalalties.setText("-");
        jButtonMenysMalalties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenysMalaltiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonMenysMalalties)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMesMalalties))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMesMalalties)
                    .addComponent(jButtonMenysMalalties))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pacients", 0, 0, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(153, 326));

        jListPacients.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jScrollPanePacients.setViewportView(jListPacients);

        jButtonMenysPacients.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMenysPacients.setText("-");
        jButtonMenysPacients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenysPacientsActionPerformed(evt);
            }
        });

        jButtonMesPacients.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButtonMesPacients.setText("+");
        jButtonMesPacients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMesPacientsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPanePacients)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonMenysPacients)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMesPacients)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanePacients)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMenysPacients)
                    .addComponent(jButtonMesPacients))
                .addContainerGap())
        );

        jButtonAcceptar.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jButtonAcceptar.setText("Acceptar");
        jButtonAcceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabelFormat.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jLabelFormat.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAcceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNom))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelFormat, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                                .addGap(328, 328, 328)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelFormat)
                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAcceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAcceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptarActionPerformed
        String nom = jTextFieldNom.getText();

        if (nom.equals("")) {
            jLabelFormat.setText("Cal introduir un nom");
            return;
        }

        String msg;
        String title;
        int opcio = JOptionPane.ERROR_MESSAGE;
        boolean ok;
        if (isNew) {
            List<String> malalties = new ArrayList<String>();
            List<String> pacients = new ArrayList<String>();
            for (int i = 0; i < modelMalalties.size(); i++) {
                malalties.add((String) modelMalalties.get(i));
            }

            String dni;
            for (int i = 0; i < modelPacients.size(); i++) {
                dni = (String) modelPacients.get(i);
                pacients.add(dni);
            }
            ok = controladorSimptomes.addSimptoma(nom, malalties, pacients);
            title = "Nou simptoma";
            msg = "No s'ha pogut insertat. Pot ser que ja existeixi";
        } else {
            ok = controladorSimptomes.modificaSimptoma(nom, pacientsAfegits, pacientsEliminats,
                    malaltiesAfegides, malaltiesEliminades);
            title = "Modificar símptoma";
            msg = "No s'ha pogut modificar. Pot ser que no existeixi";
        }
        if (ok) {
            if (isNew) controladorSimptomes.redibuixarVista(nom);
            controladorSimptomes.seleccionaSimptoma(nom);
        } else {
            JOptionPane.showMessageDialog(this, msg, title, opcio);
        }

    }//GEN-LAST:event_jButtonAcceptarActionPerformed

    private void jButtonMesMalaltiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMesMalaltiesActionPerformed
        dialogAfegirMalaltia = new DialogAfegirMalaltia(controladorMalalties);
        dialogAfegirMalaltia.setVisible(true);

        if (dialogAfegirMalaltia.isAcceptat()) {
            for (String malaltia : dialogAfegirMalaltia.getMalaltiesSeleccionats()) {
                if (!modelMalalties.contains(malaltia)) {
                    modelMalalties.addElement(malaltia);
                    if (!isNew) {
                        malaltiesAfegides.add(malaltia);
                    }
                }
            }
        }
        controladorSimptomes.setModificant();
    }//GEN-LAST:event_jButtonMesMalaltiesActionPerformed

    private void jButtonMenysMalaltiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenysMalaltiesActionPerformed
        int index = jListMalalties.getSelectedIndex();
        if (index != -1) {
            if (!isNew) {
                if (!malaltiesEliminades.contains(modelMalalties.getElementAt(index).toString())) {
                    malaltiesEliminades.add(modelMalalties.get(index).toString());
                }
            }
            modelMalalties.remove(index);
        }
        controladorSimptomes.setModificant();
    }//GEN-LAST:event_jButtonMenysMalaltiesActionPerformed

    private void jButtonMesPacientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMesPacientsActionPerformed
        dialogAfegirPacient = new DialogAfegirPacient(controladorPacients);

        dialogAfegirPacient.setVisible(true);

        if (dialogAfegirPacient.isAcceptat()) {

            for (String pacient : dialogAfegirPacient.getPacientsSeleccionats()) {
                modelPacients.addElement(pacient.substring(0, pacient.indexOf(":")).trim());
                if (!isNew) {
                    pacientsAfegits.add(pacient.substring(0, pacient.indexOf(":")).trim());
                }
            }
        }
        controladorSimptomes.setModificant();
    }//GEN-LAST:event_jButtonMesPacientsActionPerformed
    private void jButtonMenysPacientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenysPacientsActionPerformed
        int index = jListPacients.getSelectedIndex();
        if (index != -1) {
            if (!isNew) {
                if (!pacientsEliminats.contains(modelPacients.getElementAt(index).toString())) {
                    pacientsEliminats.add(modelPacients.get(index).toString());
                }
            }
            modelPacients.remove(index);
        }
        controladorSimptomes.setModificant();
    }//GEN-LAST:event_jButtonMenysPacientsActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        controladorSimptomes.cancelar();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTextFieldNomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNomFocusGained
        jLabelFormat.setText("");
    }//GEN-LAST:event_jTextFieldNomFocusGained

    private void jTextFieldNomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomKeyTyped
        controladorSimptomes.setModificant();
    }//GEN-LAST:event_jTextFieldNomKeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAcceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonMenysMalalties;
    private javax.swing.JButton jButtonMenysPacients;
    private javax.swing.JButton jButtonMesMalalties;
    private javax.swing.JButton jButtonMesPacients;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFormat;
    private javax.swing.JList jListMalalties;
    private javax.swing.JList jListPacients;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPanePacients;
    private javax.swing.JTextField jTextFieldNom;
    // End of variables declaration//GEN-END:variables

    private void omplirCamps(String simptoma) {
        jTextFieldNom.setText(simptoma);

        for (String malaltia : controladorSimptomes.getMalalties(simptoma)) {
            modelMalalties.addElement(malaltia);
        }

        for (String pacient : controladorSimptomes.getPacients(simptoma)) {
            modelPacients.addElement(pacient);
        }
    }
}
